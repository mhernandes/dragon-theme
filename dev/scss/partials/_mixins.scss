// Define a flex container and your flow
@mixin flex($flow) {
	display: -webkit-flex;
	display: -moz-flex;
	display: -ms-flex;
	display: -o-flex;
	display: flex;

	-webkit-flex-flow: $flow;
	-moz-flex-flow: $flow;
	-ms-flex-flow: $flow;
	-o-flex-flow: $flow;
	flex-flow: $flow;
}

// Define a inline-flex
@mixin inline-flex($flow) {
	display: -webkit-inline-flex;
	display: -moz-inline-flex;
	display: -ms-inline-flex;
	display: -o-inline-flex;
	display: inline-flex;
}

// Define the alignment for a flex container
@mixin flex-align($justify-content, $align-items, $align-content) {
	-webkit-justify-content: $justify-content;
	-moz-justify-content: $justify-content;
	justify-content: $justify-content;

	-webkit-align-items: $align-items;
	align-items: $align-items;

	align-content: $align-content;
	-webkit-align-content: $align-content;
}

// Define the property for box-sizing
@mixin box-sizing($bs) {
	-webkit-box-sizing: $bs;
	-moz-box-sizing: $bs;
	box-sizing: $bs;
}

// Define the property for transition
@mixin transition($transition) {
	-webkit-transition: $transition;
	-moz-transition: $transition;
	-o-transition: $transition;
	transition: $transition;
}

// Define the property for transform
@mixin transform($transform) {
	-webkit-transform: $transform;
	-moz-transform: $transform;
	-ms-transform: $transform;
	-o-transform: $transform;
	transform: $transform;
}

@mixin gradient($coloring) {
	background-image: -webkit-linear-gradient($coloring);
	background-image: -o-linear-gradient($coloring);
	background-image: linear-gradient($coloring);
}

@mixin post-color($color) {
	@if map-has-key($post-color, $color) == true {
		background-color: map-get($post-color, $color);
	}
}

@mixin post-category() {
	@each $key, $value in $category_color {
		&[category="#{$key}"] {
			.article__content a {
				color: map-get($post-color, $value);
				border-bottom-color: map-get($post-color, $value);
			}

			h1, h2, h3, h4 {
				color: map-get($post-color, $value);
			}
		}
	}
}

@mixin menu-category() {
	@each $key, $value in $category_color {
		&[category="#{$key}"] {
			background-color: map-get($post-color, $value);

			ul { background-color: map-get($post-color, $value); }
		}
	}
	@each $key, $value in $post-color {
		&[category="#{$key}"] {
			background-color: map-get($post-color, $value);

			ul { background-color: map-get($post-color, $value); }
		}
	}
}

@mixin menu-wrapper() {
	@each $key, $value in $category_color {
		&[category="#{$key}"] {
			ul { background-color: map-get($post-color, $value); }
		}
	}
	@each $key, $value in $post-color {
		&[category="#{$key}"] {
			ul { background-color: map-get($post-color, $value); }
		}
	}
}

@mixin category-color() {
	@each $key, $value in $category_color {
		&[category="#{$key}"] { background-color: map-get($post-color, $value); }
	}
	
	@each $key, $value in $post-color {
		&[category="#{$key}"] { background-color: map-get($post-color, $value); }
	}
}

@mixin color-share() {
	@each $key, $value in $category_color {
		&[category="#{$key}"] { a { color: map-get($post-color, $value); } }
	}
	
	@each $key, $value in $post-color {
		&[category="#{$key}"] { a { color: map-get($post-color, $value); } }
	}
}